{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageCount","Array","from","length","Math","ceil","_","index","prevLinkAria","nextLinkAria","startIndex","itemsForCurrentPage","slice","className","cn","disabled","href","onClick","map","page","active","item","items","to","numbers","n","push","getNumbers","App","useState","itemsOnDesc","setItemsOnDesc","setCurrentPage","startItem","endIem","min","id","onChange","e","target","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,MAAMC,KACtB,CAAEC,OAAQC,KAAKC,KAAKT,EAAMO,OAASN,KACnC,SAACS,EAAGC,GAAJ,OAAcA,EAAQ,KAGlBC,EAA+B,IAAhBV,EACfW,EAAeX,IAAgBE,EAAUG,OAczCO,GAAcZ,EAAc,GAAKD,EACjCc,EAAsBf,EAAMgB,MAAMF,EAAYA,EAAab,GAEjE,OACE,qCACE,qBAAIgB,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBjB,IAA3C,SACE,mBACE,UAAQ,WACRe,UAAU,YACVG,KAAK,QACL,gBAAeR,EACfS,QAxBc,WACjBT,GACHT,EAAaD,EAAc,IAiBvB,oBAUDE,EAAUkB,KAAI,SAACC,GAAD,OACb,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASrB,IAFhD,SAIE,mBACE,UAAQ,WACRe,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMlB,EAAaoB,IAJ9B,SAMGA,KATEA,MAaT,oBACEN,UAAWC,IAAG,YACZ,CAAEC,SAAUjB,IAAgBE,EAAUG,SAF1C,SAIE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QA/Cc,WACjBR,GACHV,EAAaD,EAAc,IAwCvB,uBAWJ,6BACGa,EAAoBO,KAAI,SAACG,GAAD,OACvB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC9E5BC,ECPC,SAAoBpB,EAAcqB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIvB,EAAMuB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDAKG,CAAW,EAAG,IACzBT,KAAI,SAAAO,GAAC,qBAAYA,MAIPG,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAJrB,GAIjB,mBAAO/B,EAAP,KAAoBkC,EAApB,KACMnC,EAAUiC,EACVG,GAAanC,EANF,GAM8BD,EAN9B,EAOXqC,EAAS9B,KAAK+B,IAAIF,EAAYpC,EAPnB,EAOyCyB,EAAMnB,QAEhE,OACE,sBAAKU,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWf,EADX,mBACiCmC,EADjC,cACgDC,EADhD,eAC6DZ,EAAMnB,OADnE,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SAAU,SAACC,GACTP,GAAgBO,EAAEC,OAAOC,OACzBR,EAzBK,IA2BPQ,MAAOV,EART,UAUE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEjB,MAAO0B,EACPzB,QAASiC,EACThC,YAAaA,EACbC,aAAc,SAACoB,GAAD,OAAUa,EAAeb,UEpD/CuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2c81e141.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: string[];\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Array.from(\n    { length: Math.ceil(total.length / perPage) },\n    (_, index) => index + 1,\n  );\n\n  const prevLinkAria = currentPage === 1;\n  const nextLinkAria = currentPage === pageCount.length;\n\n  const handlePrevClick = () => {\n    if (!prevLinkAria) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (!nextLinkAria) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const startIndex = (currentPage - 1) * perPage;\n  const itemsForCurrentPage = total.slice(startIndex, startIndex + perPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={prevLinkAria}\n            onClick={handlePrevClick}\n          >\n            «\n          </a>\n        </li>\n        {pageCount.map((page) => (\n          <li\n            key={page}\n            className={cn('page-item', { active: page === currentPage })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={cn('page-item',\n            { disabled: currentPage === pageCount.length })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={nextLinkAria}\n            onClick={handleNextClick}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsForCurrentPage.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst startValue = 1;\n\nexport const App: React.FC = () => {\n  const [itemsOnDesc, setItemsOnDesc] = useState(5);\n  const [currentPage, setCurrentPage] = useState(startValue);\n  const perPage = itemsOnDesc;\n  const startItem = (currentPage - startValue) * perPage + startValue;\n  const endIem = Math.min(startItem + perPage - startValue, items.length);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endIem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => {\n              setItemsOnDesc(+e.target.value);\n              setCurrentPage(startValue);\n            }}\n            value={itemsOnDesc}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items}\n        perPage={itemsOnDesc}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}